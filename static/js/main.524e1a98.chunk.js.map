{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTabContent","find","tab","id","content","selectedTab","className","map","classNames","href","onClick","handlerOnClick","title","App","useState","setSelectedTabId","selectedTabTitle","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,GAAqB,UAAAH,EAAKI,MAAK,SAAAC,GAAG,OACtCA,EAAIC,KAAOL,YADc,eACGM,UAAWP,EAAK,GAAGO,QAE3CC,EAAcR,EAAKI,MAAK,SAAAC,GAAG,OAC/BA,EAAIC,KAAOL,MAAmBD,EAAK,GAQrC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKS,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAL,GAAG,OACX,oBACEI,UAAWE,IAAW,CACpB,YAAaH,EAAYF,KAAOD,EAAIC,KAEtC,UAAQ,MAJV,SAOE,mBACEM,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,kBArBA,SAACR,GAClBA,EAAIC,KAAOL,GACbC,EAAcG,GAmBWS,CAAeT,IAHhC,SAKGA,EAAIU,SAPFV,EAAIC,WAcjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGN,QC5CIH,EAAc,CACzB,CAAEM,GAAI,QAASS,MAAO,QAASR,QAAS,eACxC,CAAED,GAAI,QAASS,MAAO,QAASR,QAAS,eACxC,CAAED,GAAI,QAASS,MAAO,QAASR,QAAS,gBAG7BS,EAAgB,WAAO,IAAD,EACjC,EAA0CC,mBAASjB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBiB,EAAtB,KAMMC,EAAgB,UAAGnB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,YAA/B,aAAG,EAA4Cc,MAErE,OACE,sBAAKN,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,KAGtB,cAAC,EAAD,CACEnB,KAAMA,EACNC,cAAeA,EACfC,cAfc,SAACG,GACnBa,EAAiBb,EAAIC,WCfzBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.524e1a98.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../interface/interface';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTabContent = tabs.find(tab => (\n    tab.id === selectedTabId))?.content || tabs[0].content;\n\n  const selectedTab = tabs.find(tab => (\n    tab.id === selectedTabId)) || tabs[0];\n\n  const handlerOnClick = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames({\n                'is-active': selectedTab.id === tab.id,\n              })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handlerOnClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nimport { Tab } from './interface/interface';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const tabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  const selectedTabTitle = tabs.find(tab => tab.id === selectedTabId)?.title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTabTitle}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={tabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}